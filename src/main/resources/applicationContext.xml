<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
        
    <context:component-scan base-package="net.yangziwen.bookshelf" >
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

	<task:annotation-driven/>
	<task:scheduler id="taskScheduler" pool-size="10"/>
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	
	<bean id="dataSource"
			class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
				<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
				<property name="url" value="${jdbc.mysql.url}"></property>
				<property name="username" value="${jdbc.mysql.username}"></property>
				<property name="password" value="${jdbc.mysql.password}"></property>
				<property name="initialSize" value="${jdbc.initialSize}"></property>
				<property name="maxActive" value="${jdbc.maxActive}"></property>
				<property name="maxIdle" value="${jdbc.maxIdle}"></property>
				<property name="minIdle" value="${jdbc.minIdle}"></property>
				<property name="logAbandoned" value="true"></property>
				<property name="removeAbandoned" value="true"></property>
				<property name="removeAbandonedTimeout" value="150"></property>
				<property name="maxWait" value="3000"></property>
				<property name="testWhileIdle" value="true"></property>
				<property name="timeBetweenEvictionRunsMillis" value="300000"></property>
				<property name="minEvictableIdleTimeMillis" value="320000"></property>
				<property name="filters" value="mergeStat"></property>
		</bean>

	<!-- <bean id="dataSource"
		class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="org.sqlite.JDBC" />
		<property name="url" value="jdbc:sqlite:#{systemProperties['user.dir']}/db/bookshelf.db" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!-- <prop key="hibernate.dialect">
					net.yangziwen.bookshelf.util.SQLiteDialect
				</prop> -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.OSCacheProvider
				</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.jdbc.batch_size">30</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					false
				</prop>
				<prop key="hibernate.order_inserts">true</prop>
				<prop key="hibernate.order_updates">true</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>net.yangziwen.bookshelf.pojo</value>
			</list>
		</property>
	</bean>
	
	<bean id="hibernateTxManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="hibernateTxManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* net.yangziwen..service..*.*(..))" />
	</aop:config>
	
	<beans profile="development">
		<context:property-placeholder location="classpath:jdbc.properties"/>
	</beans>
	
	<beans profile="production">
		<context:property-placeholder location="classpath:jdbc-jd.properties"/>
	</beans>

</beans>